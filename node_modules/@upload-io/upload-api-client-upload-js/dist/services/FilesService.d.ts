import type { BeginUploadRequest } from "../models/BeginUploadRequest";
import type { BeginUploadResponse } from "../models/BeginUploadResponse";
import type { CompleteUploadPartRequest } from "../models/CompleteUploadPartRequest";
import type { FileId } from "../models/FileId";
import type { UploadPart } from "../models/UploadPart";
import type { UploadPartIndex } from "../models/UploadPartIndex";
import type { UploadPartList } from "../models/UploadPartList";
export declare class FilesService {
    /**
     * Begins a new multipart file upload. Required API key type: 'secret_*' or 'public_*'.
     * @param requestBody File upload parameters.
     * @returns BeginUploadResponse Success.
     * @throws ApiError
     */
    static beginMultipartUpload(requestBody: BeginUploadRequest): Promise<BeginUploadResponse>;
    /**
     * Finalizes an upload part for an in-progress multipart upload. Required API key type: 'secret_*' or 'public_*'.
     * @param fileId
     * @param uploadPartIndex
     * @param requestBody
     * @returns void
     * @throws ApiError
     */
    static completeUploadPart(fileId: FileId, uploadPartIndex: UploadPartIndex, requestBody: CompleteUploadPartRequest): Promise<void>;
    /**
     * Gets a remaining upload part for an in-progress upload. Required API key type: 'secret_*' or 'public_*'.
     * @param fileId
     * @param uploadPartIndex
     * @returns UploadPart Success.
     * @throws ApiError
     */
    static getUploadPart(fileId: FileId, uploadPartIndex: UploadPartIndex): Promise<UploadPart>;
    /**
     * Lists the remaining upload parts for an in-progress upload. An empty array is returned when the upload is complete. Required API key type: 'secret_*' or 'public_*'.
     * @param fileId
     * @returns UploadPartList Success.
     * @throws ApiError
     */
    static getUploadParts(fileId: FileId): Promise<UploadPartList>;
}
